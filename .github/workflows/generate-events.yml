name: LLM Story & Plot Generation Factory

on:
  schedule:
    # 每12小时运行一次，持续生成新剧情
    - cron: '0 */12 * * *'
  workflow_dispatch: # 允许手动触发
    inputs:
      story_count:
        description: '生成故事数量'
        required: false
        default: '50'
        type: string
      plot_complexity:
        description: '剧情复杂度'
        required: false
        default: 'medium'
        type: choice
        options:
        - simple
        - medium
        - complex
        - epic
      story_themes:
        description: '故事主题 (逗号分隔)'
        required: false
        default: 'martial_arts,sect_politics,romance,revenge,mystery'
        type: string

jobs:
  generate-llm-stories:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    
    strategy:
      matrix:
        story_type: 
          - main_quest      # 主线剧情
          - side_quest      # 支线任务
          - npc_stories     # NPC背景故事
          - sect_events     # 门派事件
          - romance_plots   # 情感剧情
          - mystery_cases   # 悬疑案件
          - martial_legends # 武功传说
          - world_events    # 世界大事件
    
    steps:
    - name: 🏮 Checkout Repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        fetch-depth: 0

    - name: 🐍 Setup Python Environment
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        cache: 'pip'

    - name: 📦 Install Dependencies
      run: |
        pip install --upgrade pip
        pip install requests python-dotenv openai anthropic google-generativeai
        pip install sqlite3 json5 pyyaml markdown beautifulsoup4

    - name: 🤖 Generate LLM Stories - ${{ matrix.story_type }}
      env:
        DEEPSEEK_TOKEN: ${{ secrets.DEEPSEEK_TOKEN }}
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
        GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY }}
        STORY_COUNT: ${{ github.event.inputs.story_count || '50' }}
        PLOT_COMPLEXITY: ${{ github.event.inputs.plot_complexity || 'medium' }}
        STORY_THEMES: ${{ github.event.inputs.story_themes || 'martial_arts,sect_politics,romance,revenge,mystery' }}
        STORY_TYPE: ${{ matrix.story_type }}
      run: |
        python scripts/llm_story_generator.py \
          --story-type "$STORY_TYPE" \
          --count "$STORY_COUNT" \
          --complexity "$PLOT_COMPLEXITY" \
          --themes "$STORY_THEMES" \
          --output-format "json,markdown,sqlite"

    - name: 📊 Generate Story Analytics
      run: |
        python scripts/story_analytics.py \
          --analyze-generated \
          --create-reports \
          --update-metrics

    - name: 🎭 Create Story Connections
      run: |
        python scripts/story_connector.py \
          --link-characters \
          --create-plot-threads \
          --build-story-graph

    - name: 📚 Update Story Database
      run: |
        python scripts/update_story_database.py \
          --merge-new-stories \
          --update-indexes \
          --optimize-queries

    - name: 🎨 Generate Story Assets
      run: |
        python scripts/story_assets_generator.py \
          --create-character-portraits \
          --generate-location-descriptions \
          --create-item-descriptions

    - name: 📝 Create Story Documentation
      run: |
        python scripts/story_documentation.py \
          --create-story-wiki \
          --generate-character-sheets \
          --create-timeline

    - name: 🔍 Quality Assurance Check
      run: |
        python scripts/story_qa.py \
          --check-consistency \
          --validate-characters \
          --verify-plot-logic \
          --test-story-flow

    - name: 📤 Commit Generated Stories
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "LLM Story Generator"
        
        # Add all generated content
        git add frontend/src/data/stories/
        git add frontend/src/data/characters/
        git add frontend/src/data/plots/
        git add docs/stories/
        
        # Create detailed commit message
        STORY_COUNT=$(find frontend/src/data/stories/ -name "*.json" -newer .git/COMMIT_EDITMSG 2>/dev/null | wc -l || echo "0")
        
        git commit -m "🏮 Auto-generate ${{ matrix.story_type }} stories via LLM

        📊 Generation Summary:
        - Story Type: ${{ matrix.story_type }}
        - Stories Generated: ${STORY_COUNT}
        - Complexity: ${{ github.event.inputs.plot_complexity || 'medium' }}
        - Themes: ${{ github.event.inputs.story_themes || 'martial_arts,sect_politics,romance,revenge,mystery' }}
        
        🤖 LLM Providers Used:
        - DeepSeek (Primary)
        - OpenAI (Backup)
        - Anthropic (Quality Check)
        
        📚 Generated Content:
        - Complete story plots and narratives
        - Character backgrounds and relationships
        - Dialogue and interactions
        - World-building elements
        - Quest objectives and rewards
        
        🎯 Story Features:
        - Multi-layered plot development
        - Character arc progression
        - Interconnected storylines
        - Cultural authenticity (武侠)
        - Emotional depth and engagement
        
        Generated at: $(date -u '+%Y-%m-%d %H:%M:%S UTC')
        Workflow: ${{ github.workflow }}
        Run ID: ${{ github.run_id }}" || echo "No new stories to commit"

    - name: 🚀 Push Generated Content
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        branch: main
        force: false

    - name: 📊 Upload Story Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: generated-stories-${{ matrix.story_type }}
        path: |
          frontend/src/data/stories/
          docs/stories/
          logs/story-generation.log
        retention-days: 30

    - name: 🔔 Notify Story Generation Complete
      if: success()
      run: |
        echo "✅ Successfully generated ${{ matrix.story_type }} stories!"
        echo "📊 Check the repository for new story content"
        echo "🎮 Stories are ready for game integration"

  consolidate-stories:
    needs: generate-llm-stories
    runs-on: ubuntu-latest
    if: always()
    
    steps:
    - name: 🏮 Checkout Repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        fetch-depth: 0

    - name: 🐍 Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: 📚 Consolidate All Stories
      run: |
        python scripts/story_consolidator.py \
          --merge-all-types \
          --create-master-index \
          --generate-story-map \
          --update-game-data

    - name: 🎯 Create Story Release
      run: |
        python scripts/create_story_release.py \
          --version "$(date +%Y.%m.%d.%H%M)" \
          --create-changelog \
          --package-stories

    - name: 📤 Final Commit
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "Story Consolidator"
        
        git add .
        git commit -m "🎭 Consolidate LLM-generated story collection

        📊 Story Collection Summary:
        - Total Stories: $(find frontend/src/data/stories/ -name "*.json" | wc -l)
        - Story Types: $(ls frontend/src/data/stories/ | wc -l)
        - Characters: $(find frontend/src/data/characters/ -name "*.json" | wc -l)
        - Plots: $(find frontend/src/data/plots/ -name "*.json" | wc -l)
        
        🎮 Ready for Game Integration:
        - Master story index updated
        - Story connections mapped
        - Game data synchronized
        - Quality assurance passed
        
        Generated: $(date -u '+%Y-%m-%d %H:%M:%S UTC')" || echo "No consolidation needed"

    - name: 🚀 Push Consolidated Stories
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        branch: main
